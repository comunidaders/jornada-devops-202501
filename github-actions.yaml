name: Terraform Pipeline

on:
  workflow_dispatch: # Permite disparo manual
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    # 1. Verificação de Formatação
    - name: Terraform Format Check
      working-directory: terraform
      run: terraform fmt -check

    # 2. Validação do Código Terraform
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate

    # 3. Validação de Boas Práticas com TFLint
    - name: TFLint
      working-directory: terraform
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install.sh | bash
        tflint

    # 4. Verificação de Segurança com TFSec
    - name: TFSec Security Check
      working-directory: terraform
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install.sh | bash
        tfsec .

    # 5. Verificação de Conformidade com Checkov
    - name: Checkov Security Check
      working-directory: terraform
      run: |
        pip install checkov
        checkov -d .

    # 6. Verificação do Terraform Lock File
    - name: Validate Lock File
      working-directory: terraform
      run: terraform providers lock

    # 7. Geração de Documentação com Terraform Docs
    - name: Generate Terraform Documentation
      working-directory: terraform
      run: |
        curl -s https://raw.githubusercontent.com/terraform-docs/terraform-docs/main/install.sh | bash
        terraform-docs markdown table . > terraform-docs.md

    # 8. Placeholder para Análises Futuras (ex.: SonarQube)
    - name: Placeholder for SonarQube Analysis
      run: echo "SonarQube analysis will be added here in the future."

  dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: ci # Stage depende do CI

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    - name: Select/Create Workspace
      run: |
        terraform workspace select dev || terraform workspace new dev
      working-directory: terraform

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -var-file=dev.tfvars -out=tfplan-dev

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-dev
        path: terraform/tfplan-dev

  hml:
    name: Deploy to HML
    runs-on: ubuntu-latest
    needs: dev # Stage depende de Dev

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    - name: Select/Create Workspace
      run: |
        terraform workspace select hml || terraform workspace new hml
      working-directory: terraform

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -var-file=hml.tfvars -out=tfplan-hml

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-hml
        path: terraform/tfplan-hml

  prd:
    name: Deploy to PRD
    runs-on: ubuntu-latest
    needs: hml # Stage depende de HML

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    - name: Select/Create Workspace
      run: |
        terraform workspace select prd || terraform workspace new prd
      working-directory: terraform

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -var-file=prd.tfvars -out=tfplan-prd

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-prd
        path: terraform/tfplan-prd

    - name: Manual Approval for PRD
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: hmarr/auto-approve-action@v3
      with:
        message: "Manual approval required for PRD deployment"
